// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(TaskItemDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TaskItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 8, 17, 22, 58, 54, 784, DateTimeKind.Local).AddTicks(1845),
                            Description = "Finish the Blazor tutortial with Clean Architecture and then deploy the project to GitHub",
                            IsCompleted = false,
                            Title = "Finish the Blazor tutortial",
                            UpdatedDate = new DateTime(2024, 8, 17, 22, 58, 54, 784, DateTimeKind.Local).AddTicks(1907)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 8, 17, 22, 58, 54, 784, DateTimeKind.Local).AddTicks(1911),
                            Description = "Get rid of unnecessary mails in private e-mail inbox",
                            IsCompleted = false,
                            Title = "Clean up e-mail inbox",
                            UpdatedDate = new DateTime(2024, 8, 17, 22, 58, 54, 784, DateTimeKind.Local).AddTicks(1912)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
